//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatClient.ServiceChat {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/wcf_chat")]
    [System.SerializableAttribute()]
    public partial class Project : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string creation_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string deadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string managerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string methodologyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string creation_date {
            get {
                return this.creation_dateField;
            }
            set {
                if ((object.ReferenceEquals(this.creation_dateField, value) != true)) {
                    this.creation_dateField = value;
                    this.RaisePropertyChanged("creation_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string deadline {
            get {
                return this.deadlineField;
            }
            set {
                if ((object.ReferenceEquals(this.deadlineField, value) != true)) {
                    this.deadlineField = value;
                    this.RaisePropertyChanged("deadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string manager {
            get {
                return this.managerField;
            }
            set {
                if ((object.ReferenceEquals(this.managerField, value) != true)) {
                    this.managerField = value;
                    this.RaisePropertyChanged("manager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string methodology {
            get {
                return this.methodologyField;
            }
            set {
                if ((object.ReferenceEquals(this.methodologyField, value) != true)) {
                    this.methodologyField = value;
                    this.RaisePropertyChanged("methodology");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/wcf_chat")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int complexityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string creation_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string deadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string developerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int complexity {
            get {
                return this.complexityField;
            }
            set {
                if ((this.complexityField.Equals(value) != true)) {
                    this.complexityField = value;
                    this.RaisePropertyChanged("complexity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string creation_date {
            get {
                return this.creation_dateField;
            }
            set {
                if ((object.ReferenceEquals(this.creation_dateField, value) != true)) {
                    this.creation_dateField = value;
                    this.RaisePropertyChanged("creation_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string deadline {
            get {
                return this.deadlineField;
            }
            set {
                if ((object.ReferenceEquals(this.deadlineField, value) != true)) {
                    this.deadlineField = value;
                    this.RaisePropertyChanged("deadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string developer {
            get {
                return this.developerField;
            }
            set {
                if ((object.ReferenceEquals(this.developerField, value) != true)) {
                    this.developerField = value;
                    this.RaisePropertyChanged("developer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string project {
            get {
                return this.projectField;
            }
            set {
                if ((object.ReferenceEquals(this.projectField, value) != true)) {
                    this.projectField = value;
                    this.RaisePropertyChanged("project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceChat.IServiceChat", CallbackContract=typeof(ChatClient.ServiceChat.IServiceChatCallback))]
    public interface IServiceChat {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/Connect", ReplyAction="http://tempuri.org/IServiceChat/ConnectResponse")]
        int Connect(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/Connect", ReplyAction="http://tempuri.org/IServiceChat/ConnectResponse")]
        System.Threading.Tasks.Task<int> ConnectAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/Disconnect", ReplyAction="http://tempuri.org/IServiceChat/DisconnectResponse")]
        void Disconnect(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/Disconnect", ReplyAction="http://tempuri.org/IServiceChat/DisconnectResponse")]
        System.Threading.Tasks.Task DisconnectAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/UserRegistration", ReplyAction="http://tempuri.org/IServiceChat/UserRegistrationResponse")]
        bool UserRegistration(string username, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/UserRegistration", ReplyAction="http://tempuri.org/IServiceChat/UserRegistrationResponse")]
        System.Threading.Tasks.Task<bool> UserRegistrationAsync(string username, string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/UserAuthorization", ReplyAction="http://tempuri.org/IServiceChat/UserAuthorizationResponse")]
        int UserAuthorization(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/UserAuthorization", ReplyAction="http://tempuri.org/IServiceChat/UserAuthorizationResponse")]
        System.Threading.Tasks.Task<int> UserAuthorizationAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceChat/SendMsg")]
        void SendMsg(string msg, int id, string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceChat/SendMsg")]
        System.Threading.Tasks.Task SendMsgAsync(string msg, int id, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/UserContactListUsernames", ReplyAction="http://tempuri.org/IServiceChat/UserContactListUsernamesResponse")]
        string[] UserContactListUsernames(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/UserContactListUsernames", ReplyAction="http://tempuri.org/IServiceChat/UserContactListUsernamesResponse")]
        System.Threading.Tasks.Task<string[]> UserContactListUsernamesAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/_GetAllProjects", ReplyAction="http://tempuri.org/IServiceChat/_GetAllProjectsResponse")]
        ChatClient.ServiceChat.Project[] _GetAllProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/_GetAllProjects", ReplyAction="http://tempuri.org/IServiceChat/_GetAllProjectsResponse")]
        System.Threading.Tasks.Task<ChatClient.ServiceChat.Project[]> _GetAllProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/GetTasksInProject", ReplyAction="http://tempuri.org/IServiceChat/GetTasksInProjectResponse")]
        ChatClient.ServiceChat.Task[] GetTasksInProject(string projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/GetTasksInProject", ReplyAction="http://tempuri.org/IServiceChat/GetTasksInProjectResponse")]
        System.Threading.Tasks.Task<ChatClient.ServiceChat.Task[]> GetTasksInProjectAsync(string projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/AddProject", ReplyAction="http://tempuri.org/IServiceChat/AddProjectResponse")]
        bool AddProject(string values);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/AddProject", ReplyAction="http://tempuri.org/IServiceChat/AddProjectResponse")]
        System.Threading.Tasks.Task<bool> AddProjectAsync(string values);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/AddTask", ReplyAction="http://tempuri.org/IServiceChat/AddTaskResponse")]
        bool AddTask(string task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceChat/AddTask", ReplyAction="http://tempuri.org/IServiceChat/AddTaskResponse")]
        System.Threading.Tasks.Task<bool> AddTaskAsync(string task);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChatCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceChat/MsgCallback")]
        void MsgCallback(string msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChatChannel : ChatClient.ServiceChat.IServiceChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceChatClient : System.ServiceModel.DuplexClientBase<ChatClient.ServiceChat.IServiceChat>, ChatClient.ServiceChat.IServiceChat {
        
        public ServiceChatClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceChatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int Connect(string name) {
            return base.Channel.Connect(name);
        }
        
        public System.Threading.Tasks.Task<int> ConnectAsync(string name) {
            return base.Channel.ConnectAsync(name);
        }
        
        public void Disconnect(int id) {
            base.Channel.Disconnect(id);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(int id) {
            return base.Channel.DisconnectAsync(id);
        }
        
        public bool UserRegistration(string username, string login, string password) {
            return base.Channel.UserRegistration(username, login, password);
        }
        
        public System.Threading.Tasks.Task<bool> UserRegistrationAsync(string username, string login, string password) {
            return base.Channel.UserRegistrationAsync(username, login, password);
        }
        
        public int UserAuthorization(string login, string password) {
            return base.Channel.UserAuthorization(login, password);
        }
        
        public System.Threading.Tasks.Task<int> UserAuthorizationAsync(string login, string password) {
            return base.Channel.UserAuthorizationAsync(login, password);
        }
        
        public void SendMsg(string msg, int id, string username) {
            base.Channel.SendMsg(msg, id, username);
        }
        
        public System.Threading.Tasks.Task SendMsgAsync(string msg, int id, string username) {
            return base.Channel.SendMsgAsync(msg, id, username);
        }
        
        public string[] UserContactListUsernames(int id) {
            return base.Channel.UserContactListUsernames(id);
        }
        
        public System.Threading.Tasks.Task<string[]> UserContactListUsernamesAsync(int id) {
            return base.Channel.UserContactListUsernamesAsync(id);
        }
        
        public ChatClient.ServiceChat.Project[] _GetAllProjects() {
            return base.Channel._GetAllProjects();
        }
        
        public System.Threading.Tasks.Task<ChatClient.ServiceChat.Project[]> _GetAllProjectsAsync() {
            return base.Channel._GetAllProjectsAsync();
        }
        
        public ChatClient.ServiceChat.Task[] GetTasksInProject(string projectId) {
            return base.Channel.GetTasksInProject(projectId);
        }
        
        public System.Threading.Tasks.Task<ChatClient.ServiceChat.Task[]> GetTasksInProjectAsync(string projectId) {
            return base.Channel.GetTasksInProjectAsync(projectId);
        }
        
        public bool AddProject(string values) {
            return base.Channel.AddProject(values);
        }
        
        public System.Threading.Tasks.Task<bool> AddProjectAsync(string values) {
            return base.Channel.AddProjectAsync(values);
        }
        
        public bool AddTask(string task) {
            return base.Channel.AddTask(task);
        }
        
        public System.Threading.Tasks.Task<bool> AddTaskAsync(string task) {
            return base.Channel.AddTaskAsync(task);
        }
    }
}
